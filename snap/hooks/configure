#!/bin/sh

#cp  -R $SNAP/etc $SNAP_DATA/
cp $SNAP/my.cnf $SNAP_DATA/mysql/my.cnf
DEFAULT_HTTP_PORT="80"
DEFAULT_DB_HOST="localhost"
DEFAULT_DB_PORT="3306"
DEFAULT_DB_NAME="onlyoffice"
DEFAULT_DB_USER="onlyoffice"
DEFAULT_DB_PWD="onlyoffice"
DEFAULT_JWT_ENABLED="false"
DEFAULT_JWT_SECRET="secret"
DEFAULT_JWT_HEADER="Authorization"
# APP_DIR="$SNAP/var/www/onlyoffice/documentserver"
# CONF_DIR="$SNAP_DATA/etc/onlyoffice/documentserver"

# ONLYOFFICE_DEFAULT_CONFIG=${CONF_DIR}/local.json

# JWT_ENABLED=${JWT_ENABLED:-true}
# JWT_SECRET=${JWT_SECRET:-secret}
# JWT_HEADER=${JWT_HEADER:-Authorization}

# JSON_BIN=${APP_DIR}/npm/node_modules/json/lib/json.js
# JSON="${JSON_BIN} -q -f ${ONLYOFFICE_DEFAULT_CONFIG}"

nginx_onlyoffice_http_port()
{
	onlyoffice_http_port="$(onlyoffice_http_port)"
	previous_onlyoffice_http_port="$(previous_onlyoffice_http_port)"

	# If no changes were requested, then there's nothing to do here.
	if [ "$onlyoffice_http_port" = "$previous_onlyoffice_http_port" ]; then
		return 0
	fi
	set_onlyoffice_http_port "$onlyoffice_http_port"
	set_previous_onlyoffice_http_port $onlyoffice_http_port
	sed -i "s/"${previous_onlyoffice_http_port}"/"${onlyoffice_http_port}"/g" $SNAP_DATA/etc/nginx/conf.d/ds.conf
	snapctl restart onlyoffice-ds.nginx
}

set_onlyoffice_http_port()
{
	snapctl set onlyoffice.ds-port="$1"
}

onlyoffice_http_port()
{
	port="$(snapctl get onlyoffice.ds-port)"
	if [ -z "$port" ]; then
		port="$DEFAULT_HTTP_PORT"
		set_onlyoffice_http_port $port
		set_previous_onlyoffice_http_port $port
	fi

	echo "$port"
}

previous_onlyoffice_http_port()
{
	snapctl get private.onlyoffice.ds-port
}

set_previous_onlyoffice_http_port()
{
	snapctl set private.onlyoffice.ds-port="$1"
}

db_onlyoffice_db_host()
{
	onlyoffice_db_host="$(onlyoffice_db_host)"
	previous_onlyoffice_db_host="$(previous_onlyoffice_db_host)"

	# If no changes were requested, then there's nothing to do here.
	if [ "$onlyoffice_db_host" = "$previous_onlyoffice_db_host" ]; then
		return 0
	fi
	set_onlyoffice_db_host "$onlyoffice_db_host"
	set_previous_onlyoffice_db_host $onlyoffice_db_host
	sed -i "/dbHost/s/"${previous_onlyoffice_db_host}"/"${onlyoffice_db_host}"/g" $SNAP_DATA/etc/onlyoffice/documentserver/local.json
	snapctl restart onlyoffice-ds.documentserver
}

previous_onlyoffice_db_host()
{
	snapctl get private.onlyoffice.db-host
}

onlyoffice_db_host()
{
	port="$(snapctl get onlyoffice.db-host)"
	if [ -z "$port" ]; then
		port="$DEFAULT_DB_HOST"
		set_onlyoffice_db_host $port
		set_previous_onlyoffice_db_host $port
	fi

	echo "$port"
}

set_previous_onlyoffice_db_host()
{
	snapctl set private.onlyoffice.db-host="$1"
}
set_onlyoffice_db_host()
{
	snapctl set onlyoffice.db-host="$1"
}

################################################

db_onlyoffice_db_port()
{
	onlyoffice_db_port="$(onlyoffice_db_port)"
	previous_onlyoffice_db_port="$(previous_onlyoffice_db_port)"

	# If no changes were requested, then there's nothing to do here.
	if [ "$onlyoffice_db_port" = "$previous_onlyoffice_db_port" ]; then
		return 0
	fi
	set_onlyoffice_db_port "$onlyoffice_db_port"
	set_previous_onlyoffice_db_port $onlyoffice_db_port
	sed -i "/dbPort/s/"${previous_onlyoffice_db_port}"/"${onlyoffice_db_port}"/g" $SNAP_DATA/etc/onlyoffice/documentserver/local.json
	sed -i "/port/s/"${previous_onlyoffice_db_port}"/"${onlyoffice_db_port}"/g" $SNAP_DATA/mysql/root.ini
	snapctl restart onlyoffice-ds
}

set_onlyoffice_db_port()
{
	snapctl set onlyoffice.db-port="$1"
}

onlyoffice_db_port()
{
	port="$(snapctl get onlyoffice.db-port)"
	if [ -z "$port" ]; then
		port="$DEFAULT_DB_PORT"
		set_onlyoffice_db_port $port
		set_previous_onlyoffice_db_port $port
	fi

	echo "$port"
}

previous_onlyoffice_db_port()
{
	snapctl get private.onlyoffice.db-port
}

set_previous_onlyoffice_db_port()
{
	snapctl set private.onlyoffice.db-port="$1"
}
#######################################################
#######################################################
db_onlyoffice_db_name()
{
	onlyoffice_db_name="$(onlyoffice_db_name)"
	previous_onlyoffice_db_name="$(previous_onlyoffice_db_name)"

	# If no changes were requested, then there's nothing to do here.
	if [ "$onlyoffice_db_name" = "$previous_onlyoffice_db_name" ]; then
		return 0
	fi
	set_onlyoffice_db_name "$onlyoffice_db_name"
	set_previous_onlyoffice_db_name $onlyoffice_db_name
	sed -i "/dbName/s/"${previous_onlyoffice_db_name}"/"${onlyoffice_db_name}"/g" $SNAP_DATA/etc/onlyoffice/documentserver/local.json
	snapctl restart onlyoffice-ds.documentserver
}

set_onlyoffice_db_name()
{
	snapctl set onlyoffice.db-name="$1"
}

onlyoffice_db_name()
{
	port="$(snapctl get onlyoffice.db-name)"
	if [ -z "$port" ]; then
		port="$DEFAULT_DB_NAME"
		set_onlyoffice_db_name $port
		set_previous_onlyoffice_db_name $port
	fi

	echo "$port"
}

previous_onlyoffice_db_name()
{
	snapctl get private.onlyoffice.db-name
}

set_previous_onlyoffice_db_name()
{
	snapctl set private.onlyoffice.db-name="$1"
}
#######################################################
#######################################################
#######################################################

db_onlyoffice_db_user()
{
	onlyoffice_db_user="$(onlyoffice_db_user)"
	previous_onlyoffice_db_user="$(previous_onlyoffice_db_user)"

	# If no changes were requested, then there's nothing to do here.
	if [ "$onlyoffice_db_user" = "$previous_onlyoffice_db_user" ]; then
		return 0
	fi
	set_onlyoffice_db_user "$onlyoffice_db_user"
	set_previous_onlyoffice_db_user $onlyoffice_db_user
	sed -i "/dbUser/s/"${previous_onlyoffice_db_user}"/"${onlyoffice_db_user}"/g" $SNAP_DATA/etc/onlyoffice/documentserver/local.json
	snapctl restart onlyoffice-ds.documentserver
}

set_onlyoffice_db_user()
{
	snapctl set onlyoffice.db-user="$1"
}

onlyoffice_db_user()
{
	port="$(snapctl get onlyoffice.db-user)"
	if [ -z "$port" ]; then
		port="$DEFAULT_DB_USER"
		set_onlyoffice_db_user $port
		set_previous_onlyoffice_db_user $port
	fi

	echo "$port"
}

previous_onlyoffice_db_user()
{
	snapctl get private.onlyoffice.db-user
}

set_previous_onlyoffice_db_user()
{
	snapctl set private.onlyoffice.db-user="$1"
}

#######
#######
#######
db_onlyoffice_db_pwd()
{
	onlyoffice_db_pwd="$(onlyoffice_db_pwd)"
	previous_onlyoffice_db_pwd="$(previous_onlyoffice_db_pwd)"

	# If no changes were requested, then there's nothing to do here.
	if [ "$onlyoffice_db_pwd" = "$previous_onlyoffice_db_pwd" ]; then
		return 0
	fi
	set_onlyoffice_db_pwd "$onlyoffice_db_pwd"
	set_previous_onlyoffice_db_pwd $onlyoffice_db_pwd
	sed -i "/dbPass/s/"${previous_onlyoffice_db_pwd}"/"${onlyoffice_db_pwd}"/g" $SNAP_DATA/etc/onlyoffice/documentserver/local.json
	snapctl restart onlyoffice-ds.documentserver
}

set_onlyoffice_db_pwd()
{
	snapctl set onlyoffice.db-pwd="$1"
}

onlyoffice_db_pwd()
{
	port="$(snapctl get onlyoffice.db-pwd)"
	if [ -z "$port" ]; then
		port="$DEFAULT_DB_USER"
		set_onlyoffice_db_pwd $port
		set_previous_onlyoffice_db_pwd $port
	fi

	echo "$port"
}

previous_onlyoffice_db_pwd()
{
	snapctl get private.onlyoffice.db-pwd
}

set_previous_onlyoffice_db_pwd()
{
	snapctl set private.onlyoffice.db-pwd="$1"
}

token_onlyoffice_jwt_enabled()
{
	onlyoffice_jwt_enabled="$(onlyoffice_jwt_enabled)"
	previous_onlyoffice_jwt_enabled="$(previous_onlyoffice_jwt_enabled)"

	# If no changes were requested, then there's nothing to do here.
	if [ "$onlyoffice_jwt_enabled" = "$previous_onlyoffice_jwt_enabled" ]; then
		return 0
	fi
	set_onlyoffice_jwt_enabled "$onlyoffice_jwt_enabled"
	set_previous_onlyoffice_jwt_enabled $onlyoffice_jwt_enabled
	update_jwt_enabled_settings
	snapctl restart onlyoffice-ds.documentserver
}

set_onlyoffice_jwt_enabled()
{
	snapctl set onlyoffice.jwt-enabled="$1"
}

onlyoffice_jwt_enabled()
{
	port="$(snapctl get onlyoffice.jwt-enabled)"
	if [ -z "$port" ]; then
		port="$DEFAULT_JWT_ENABLED"
		set_onlyoffice_jwt_enabled $port
		set_previous_onlyoffice_jwt_enabled $port
	fi

	echo "$port"
}

previous_onlyoffice_jwt_enabled()
{
	snapctl get private.onlyoffice.jwt-enabled
}

set_previous_onlyoffice_jwt_enabled()
{
	snapctl set private.onlyoffice.jwt-enabled="$1"
}

update_jwt_enabled_settings()
{
	sed -i "/browser/s/"${previous_onlyoffice_jwt_enabled}"/"${onlyoffice_jwt_enabled}"/g" $SNAP_DATA/etc/onlyoffice/documentserver/local.json
	sed -i "/inbox/s/"${previous_onlyoffice_jwt_enabled}"/"${onlyoffice_jwt_enabled}"/g" $SNAP_DATA/etc/onlyoffice/documentserver/local.json
	sed -i "/outbox/s/"${previous_onlyoffice_jwt_enabled}"/"${onlyoffice_jwt_enabled}"/g" $SNAP_DATA/etc/onlyoffice/documentserver/local.json
}
#######################################################################################
token_onlyoffice_jwt_secret()
{
	onlyoffice_jwt_secret="$(onlyoffice_jwt_secret)"
	previous_onlyoffice_jwt_secret="$(previous_onlyoffice_jwt_secret)"

	# If no changes were requested, then there's nothing to do here.
	if [ "$onlyoffice_jwt_secret" = "$previous_onlyoffice_jwt_secret" ]; then
		return 0
	fi
	set_onlyoffice_jwt_secret "$onlyoffice_jwt_secret"
	set_previous_onlyoffice_jwt_secret $onlyoffice_jwt_secret
	sed -i "/inbox/s/"${previous_onlyoffice_jwt_secret}"/"${onlyoffice_jwt_secret}"/g" $SNAP_DATA/etc/onlyoffice/documentserver/local.json
	sed -i "/outbox/s/"${previous_onlyoffice_jwt_secret}"/"${onlyoffice_jwt_secret}"/g" $SNAP_DATA/etc/onlyoffice/documentserver/local.json
	sed -i "/session/s/"${previous_onlyoffice_jwt_secret}"/"${onlyoffice_jwt_secret}"/g" $SNAP_DATA/etc/onlyoffice/documentserver/local.json
	snapctl restart onlyoffice-ds.documentserver
}

set_onlyoffice_jwt_secret()
{
	snapctl set onlyoffice.jwt-secret="$1"
}

onlyoffice_jwt_secret()
{
	port="$(snapctl get onlyoffice.jwt-secret)"
	if [ -z "$port" ]; then
		port="$DEFAULT_JWT_SECRET"
		set_onlyoffice_jwt_secret $port
		set_previous_onlyoffice_jwt_secret $port
	fi

	echo "$port"
}

previous_onlyoffice_jwt_secret()
{
	snapctl get private.onlyoffice.jwt-secret
}

set_previous_onlyoffice_jwt_secret()
{
	snapctl set private.onlyoffice.jwt-secret="$1"
}
##############################################################
token_onlyoffice_jwt_header()
{
	onlyoffice_jwt_header="$(onlyoffice_jwt_header)"
	previous_onlyoffice_jwt_header="$(previous_onlyoffice_jwt_header)"

	# If no changes were requested, then there's nothing to do here.
	if [ "$onlyoffice_jwt_header" = "$previous_onlyoffice_jwt_header" ]; then
		return 0
	fi
	set_onlyoffice_jwt_header "$onlyoffice_jwt_header"
	set_previous_onlyoffice_jwt_header $onlyoffice_jwt_header
	sed -i "/header/s/"${previous_onlyoffice_jwt_header}"/"${onlyoffice_jwt_header}"/g" $SNAP_DATA/etc/onlyoffice/documentserver/local.json
	snapctl restart onlyoffice-ds.documentserver
}

set_onlyoffice_jwt_header()
{
	snapctl set onlyoffice.jwt-header="$1"
}

onlyoffice_jwt_header()
{
	port="$(snapctl get onlyoffice.jwt-header)"
	if [ -z "$port" ]; then
		port="$DEFAULT_JWT_HEADER"
		set_onlyoffice_jwt_header $port
		set_previous_onlyoffice_jwt_header $port
	fi

	echo "$port"
}

previous_onlyoffice_jwt_header()
{
	snapctl get private.onlyoffice.jwt-header
}

set_previous_onlyoffice_jwt_header()
{
	snapctl set private.onlyoffice.jwt-header="$1"
}

nginx_onlyoffice_http_port && \
db_onlyoffice_db_host && \
db_onlyoffice_db_name && \
db_onlyoffice_db_port && \
db_onlyoffice_db_user && \
db_onlyoffice_db_pwd && \
token_onlyoffice_jwt_enabled && \
token_onlyoffice_jwt_secret && \
token_onlyoffice_jwt_header
