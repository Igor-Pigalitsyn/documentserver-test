#!/bin/sh

cp $SNAP/my.cnf $SNAP_DATA/mysql/my.cnf
DEFAULT_HTTP_PORT="80"
DEFAULT_DB_HOST="localhost"
DEFAULT_DB_PORT="3306"
DEFAULT_JWT_ENABLED="false"
DEFAULT_JWT_SECRET="secret"
DEFAULT_JWT_HEADER="Authorization"
DEFAULT_HTTPS="false"

CONF_DIR="$SNAP_DATA/etc/onlyoffice/documentserver"
DATA_DIR="$SNAP_DATA/var/www/onlyoffice/Data"
NGINX_ONLYOFFICE_PATH="${CONF_DIR}/nginx"
NGINX_ONLYOFFICE_CONF="${NGINX_ONLYOFFICE_PATH}/ds.conf"
NGINX_CONFIG_PATH="$SNAP_DATA/etc/nginx/nginx.conf"
NGINX_WORKER_PROCESSES="1"
NGINX_WORKER_CONNECTIONS="(ulimit -n)"
SSL_VERIFY_CLIENT="off"
ONLYOFFICE_HTTPS_HSTS_ENABLED="true"
ONLYOFFICE_HTTPS_HSTS_MAXAGE="31536000"
SSL_CERTIFICATES_DIR="${DATA_DIR}/certs"
SSL_DHPARAM_PATH="$SSL_CERTIFICATES_DIR/dhparam.pem"
SSL_CERTIFICATE_PATH="$SSL_CERTIFICATES_DIR/onlyoffice.crt"
SSL_KEY_PATH="$SSL_CERTIFICATES_DIR/onlyoffice.key"


nginx_onlyoffice_http_port()
{
	onlyoffice_http_port="$(onlyoffice_http_port)"
	previous_onlyoffice_http_port="$(previous_onlyoffice_http_port)"

	# If no changes were requested, then there's nothing to do here.
	if [ "$onlyoffice_http_port" = "$previous_onlyoffice_http_port" ]; then
		return 0
	fi
	set_onlyoffice_http_port "$onlyoffice_http_port"
	set_previous_onlyoffice_http_port $onlyoffice_http_port
	sed -i "s/"${previous_onlyoffice_http_port}"/"${onlyoffice_http_port}"/g" $SNAP_DATA/etc/nginx/conf.d/ds.conf
	snapctl restart onlyoffice-ds.nginx
}

set_onlyoffice_http_port()
{
	snapctl set onlyoffice.ds-port="$1"
}

onlyoffice_http_port()
{
	port="$(snapctl get onlyoffice.ds-port)"
	if [ -z "$port" ]; then
		port="$DEFAULT_HTTP_PORT"
		set_onlyoffice_http_port $port
		set_previous_onlyoffice_http_port $port
	fi

	echo "$port"
}

previous_onlyoffice_http_port()
{
	snapctl get private.onlyoffice.ds-port
}

set_previous_onlyoffice_http_port()
{
	snapctl set private.onlyoffice.ds-port="$1"
}

db_onlyoffice_db_host()
{
	onlyoffice_db_host="$(onlyoffice_db_host)"
	previous_onlyoffice_db_host="$(previous_onlyoffice_db_host)"

	# If no changes were requested, then there's nothing to do here.
	if [ "$onlyoffice_db_host" = "$previous_onlyoffice_db_host" ]; then
		return 0
	fi
	set_onlyoffice_db_host "$onlyoffice_db_host"
	set_previous_onlyoffice_db_host $onlyoffice_db_host
	sed -i "/dbHost/s/"${previous_onlyoffice_db_host}"/"${onlyoffice_db_host}"/g" $SNAP_DATA/etc/onlyoffice/documentserver/local.json
	snapctl restart onlyoffice-ds.documentserver
}

previous_onlyoffice_db_host()
{
	snapctl get private.onlyoffice.db-host
}

onlyoffice_db_host()
{
	port="$(snapctl get onlyoffice.db-host)"
	if [ -z "$port" ]; then
		port="$DEFAULT_DB_HOST"
		set_onlyoffice_db_host $port
		set_previous_onlyoffice_db_host $port
	fi

	echo "$port"
}

set_previous_onlyoffice_db_host()
{
	snapctl set private.onlyoffice.db-host="$1"
}
set_onlyoffice_db_host()
{
	snapctl set onlyoffice.db-host="$1"
}

################################################

db_onlyoffice_db_port()
{
	onlyoffice_db_port="$(onlyoffice_db_port)"
	previous_onlyoffice_db_port="$(previous_onlyoffice_db_port)"

	# If no changes were requested, then there's nothing to do here.
	if [ "$onlyoffice_db_port" = "$previous_onlyoffice_db_port" ]; then
		return 0
	fi
	set_onlyoffice_db_port "$onlyoffice_db_port"
	set_previous_onlyoffice_db_port $onlyoffice_db_port
	sed -i "/dbPort/s/"${previous_onlyoffice_db_port}"/"${onlyoffice_db_port}"/g" $SNAP_DATA/etc/onlyoffice/documentserver/local.json
	sed -i "/port/s/"${previous_onlyoffice_db_port}"/"${onlyoffice_db_port}"/g" $SNAP_DATA/mysql/root.ini
	snapctl restart onlyoffice-ds
}

set_onlyoffice_db_port()
{
	snapctl set onlyoffice.db-port="$1"
}

onlyoffice_db_port()
{
	port="$(snapctl get onlyoffice.db-port)"
	if [ -z "$port" ]; then
		port="$DEFAULT_DB_PORT"
		set_onlyoffice_db_port $port
		set_previous_onlyoffice_db_port $port
	fi

	echo "$port"
}

previous_onlyoffice_db_port()
{
	snapctl get private.onlyoffice.db-port
}

set_previous_onlyoffice_db_port()
{
	snapctl set private.onlyoffice.db-port="$1"
}
#######################################################
#######################################################

token_onlyoffice_jwt_enabled()
{
	onlyoffice_jwt_enabled="$(onlyoffice_jwt_enabled)"
	previous_onlyoffice_jwt_enabled="$(previous_onlyoffice_jwt_enabled)"

	# If no changes were requested, then there's nothing to do here.
	if [ "$onlyoffice_jwt_enabled" = "$previous_onlyoffice_jwt_enabled" ]; then
		return 0
	fi
	set_onlyoffice_jwt_enabled "$onlyoffice_jwt_enabled"
	set_previous_onlyoffice_jwt_enabled $onlyoffice_jwt_enabled
	update_jwt_enabled_settings
	snapctl restart onlyoffice-ds.documentserver
}

set_onlyoffice_jwt_enabled()
{
	snapctl set onlyoffice.jwt-enabled="$1"
}

onlyoffice_jwt_enabled()
{
	port="$(snapctl get onlyoffice.jwt-enabled)"
	if [ -z "$port" ]; then
		port="$DEFAULT_JWT_ENABLED"
		set_onlyoffice_jwt_enabled $port
		set_previous_onlyoffice_jwt_enabled $port
	fi

	echo "$port"
}

previous_onlyoffice_jwt_enabled()
{
	snapctl get private.onlyoffice.jwt-enabled
}

set_previous_onlyoffice_jwt_enabled()
{
	snapctl set private.onlyoffice.jwt-enabled="$1"
}

update_jwt_enabled_settings()
{
	sed -i "/browser/s/"${previous_onlyoffice_jwt_enabled}"/"${onlyoffice_jwt_enabled}"/g" $SNAP_DATA/etc/onlyoffice/documentserver/local.json
	sed -i "/inbox/s/"${previous_onlyoffice_jwt_enabled}"/"${onlyoffice_jwt_enabled}"/g" $SNAP_DATA/etc/onlyoffice/documentserver/local.json
	sed -i "/outbox/s/"${previous_onlyoffice_jwt_enabled}"/"${onlyoffice_jwt_enabled}"/g" $SNAP_DATA/etc/onlyoffice/documentserver/local.json
}
#######################################################################################
token_onlyoffice_jwt_secret()
{
	onlyoffice_jwt_secret="$(onlyoffice_jwt_secret)"
	previous_onlyoffice_jwt_secret="$(previous_onlyoffice_jwt_secret)"

	# If no changes were requested, then there's nothing to do here.
	if [ "$onlyoffice_jwt_secret" = "$previous_onlyoffice_jwt_secret" ]; then
		return 0
	fi
	set_onlyoffice_jwt_secret "$onlyoffice_jwt_secret"
	set_previous_onlyoffice_jwt_secret $onlyoffice_jwt_secret
	sed -i "/inbox/s/"${previous_onlyoffice_jwt_secret}"/"${onlyoffice_jwt_secret}"/g" $SNAP_DATA/etc/onlyoffice/documentserver/local.json
	sed -i "/outbox/s/"${previous_onlyoffice_jwt_secret}"/"${onlyoffice_jwt_secret}"/g" $SNAP_DATA/etc/onlyoffice/documentserver/local.json
	sed -i "/session/s/"${previous_onlyoffice_jwt_secret}"/"${onlyoffice_jwt_secret}"/g" $SNAP_DATA/etc/onlyoffice/documentserver/local.json
	snapctl restart onlyoffice-ds.documentserver
}

set_onlyoffice_jwt_secret()
{
	snapctl set onlyoffice.jwt-secret="$1"
}

onlyoffice_jwt_secret()
{
	port="$(snapctl get onlyoffice.jwt-secret)"
	if [ -z "$port" ]; then
		port="$DEFAULT_JWT_SECRET"
		set_onlyoffice_jwt_secret $port
		set_previous_onlyoffice_jwt_secret $port
	fi

	echo "$port"
}

previous_onlyoffice_jwt_secret()
{
	snapctl get private.onlyoffice.jwt-secret
}

set_previous_onlyoffice_jwt_secret()
{
	snapctl set private.onlyoffice.jwt-secret="$1"
}
##############################################################
token_onlyoffice_jwt_header()
{
	onlyoffice_jwt_header="$(onlyoffice_jwt_header)"
	previous_onlyoffice_jwt_header="$(previous_onlyoffice_jwt_header)"
	set_onlyoffice_jwt_header "$onlyoffice_jwt_header"
	set_previous_onlyoffice_jwt_header $onlyoffice_jwt_header
	sed -i "/header/s/"${previous_onlyoffice_jwt_header}"/"${onlyoffice_jwt_header}"/g" $SNAP_DATA/etc/onlyoffice/documentserver/local.json
	snapctl restart onlyoffice-ds.documentserver
}

set_onlyoffice_jwt_header()
{
	snapctl set onlyoffice.jwt-header="$1"
}

onlyoffice_jwt_header()
{
	port="$(snapctl get onlyoffice.jwt-header)"
	if [ -z "$port" ]; then
		port="$DEFAULT_JWT_HEADER"
		set_onlyoffice_jwt_header $port
		set_previous_onlyoffice_jwt_header $port
	fi

	echo "$port"
}

previous_onlyoffice_jwt_header()
{
	snapctl get private.onlyoffice.jwt-header
}

set_previous_onlyoffice_jwt_header()
{
	snapctl set private.onlyoffice.jwt-header="$1"
}
#####################################################################################
#####################################################################################

token_onlyoffice_https()
{
	onlyoffice_https="$(onlyoffice_https)"
	previous_onlyoffice_https="$(previous_onlyoffice_https)"

	# If no changes were requested, then there's nothing to do here.
	if [ "$onlyoffice_https" = "$previous_onlyoffice_https" ]; then
		return 0
	fi
	if [ "$onlyoffice_https" = "true" ] || [ "$onlyoffice_https" = "false" ]; then
		set_onlyoffice_https "$onlyoffice_https"
		set_previous_onlyoffice_https $onlyoffice_https
		update_nginx_settings
		snapctl restart onlyoffice-ds
	fi

	
}

set_onlyoffice_https()
{
	snapctl set onlyoffice.https="$1"
}

onlyoffice_https()
{
	port="$(snapctl get onlyoffice.https)"
	if [ -z "$port" ]; then
		port="$DEFAULT_HTTPS"
		set_onlyoffice_https $port
		set_previous_onlyoffice_https $port
	fi

	echo "$port"
}

previous_onlyoffice_https()
{
	snapctl get private.onlyoffice.https
}

set_previous_onlyoffice_https()
{
	snapctl set private.onlyoffice.https="$1"
}


update_nginx_settings(){

  # setup HTTPS
  if [ -f "${SSL_CERTIFICATE_PATH}" -a -f "${SSL_KEY_PATH}" ]; then
    cp -f ${NGINX_ONLYOFFICE_PATH}/ds-ssl.conf.tmpl ${NGINX_ONLYOFFICE_CONF}
	sed -i -e "s#\/etc\/nginx#${SNAP_DATA}\/etc\/nginx#g" ${NGINX_ONLYOFFICE_CONF}

    # configure nginx
    sed 's,{{SSL_CERTIFICATE_PATH}},'"${SSL_CERTIFICATE_PATH}"',' -i ${NGINX_ONLYOFFICE_CONF}
    sed 's,{{SSL_KEY_PATH}},'"${SSL_KEY_PATH}"',' -i ${NGINX_ONLYOFFICE_CONF}

    # turn on http2
    sed 's,\(443 ssl\),\1 http2,' -i ${NGINX_ONLYOFFICE_CONF}

    # if dhparam path is valid, add to the config, otherwise remove the option
    if [ -r "${SSL_DHPARAM_PATH}" ]; then
      sed 's,\(\#* *\)\?\(ssl_dhparam \).*\(;\)$,'"\2${SSL_DHPARAM_PATH}\3"',' -i ${NGINX_ONLYOFFICE_CONF}
    else
      sed '/ssl_dhparam/d' -i ${NGINX_ONLYOFFICE_CONF}
    fi

    sed 's,\(ssl_verify_client \).*\(;\)$,'"\1${SSL_VERIFY_CLIENT}\2"',' -i ${NGINX_ONLYOFFICE_CONF}

    if [ -f "${CA_CERTIFICATES_PATH}" ]; then
      sed '/ssl_verify_client/a '"ssl_client_certificate ${CA_CERTIFICATES_PATH}"';' -i ${NGINX_ONLYOFFICE_CONF}
    fi

    if [ "${ONLYOFFICE_HTTPS_HSTS_ENABLED}" == "true" ]; then
      sed 's,\(max-age=\).*\(;\)$,'"\1${ONLYOFFICE_HTTPS_HSTS_MAXAGE}\2"',' -i ${NGINX_ONLYOFFICE_CONF}
    else
      sed '/max-age=/d' -i ${NGINX_ONLYOFFICE_CONF}
    fi
	cp -f ${NGINX_ONLYOFFICE_CONF} $SNAP_DATA/etc/nginx/conf.d/ds.conf
  else
    #ln -sf ${NGINX_ONLYOFFICE_PATH}/ds.conf.tmpl ${NGINX_ONLYOFFICE_CONF}
	cp -f ${NGINX_ONLYOFFICE_PATH}/ds.conf.tmpl ${NGINX_ONLYOFFICE_CONF}
	sed -i -e "s#\/etc\/nginx#${SNAP_DATA}\/etc\/nginx#g" ${NGINX_ONLYOFFICE_CONF}
	cp -f ${NGINX_ONLYOFFICE_CONF} $SNAP_DATA/etc/nginx/conf.d/ds.conf
  fi

  # check if ipv6 supported otherwise remove it from nginx config
  if [ ! -f /proc/net/if_inet6 ]; then
    sed '/listen\s\+\[::[0-9]*\].\+/d' -i $NGINX_ONLYOFFICE_CONF
  fi
}


nginx_onlyoffice_http_port && \
db_onlyoffice_db_host && \
db_onlyoffice_db_port && \
token_onlyoffice_jwt_enabled && \
token_onlyoffice_jwt_secret && \
token_onlyoffice_jwt_header && \
token_onlyoffice_https
